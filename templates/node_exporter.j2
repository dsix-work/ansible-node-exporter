#!/bin/sh
#
# <daemonname> <summary>
#
# chkconfig:   345 99 01
# description: Manage node exporter


### BEGIN INIT INFO
# Provides: node_exporter
# Required-Start: 
# Required-Stop: 
# Should-Start: 
# Should-Stop: 
# Default-Start: 
# Default-Stop: 
# Short-Description: 
# Description: Manage node exporter
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

EXEC="{{ _node_exporter_binary_install_dir }}/node_exporter"
PROG="node_exporter"
USER="{{ _node_exporter_system_user }}"
LOGFILE="/var/log/monitoring/$PROG.log"
# node_exporter is not able to manage configuration file
#config="<path to major config file>"

[ -e /etc/sysconfig/$PROG ] && . /etc/sysconfig/$PROG

LOCKFILE=/var/lock/subsys/$PROG

prepare() {
    mkdir -p `dirname $LOGFILE` || true
    chown -R $USER: `dirname $LOGFILE`
}

start() {
    [ -x $EXEC ] || exit 5
    #[ -f $config ] || exit 6
    echo -n $"Starting $PROG: "
    # if not running, start it up here, usually something like "daemon $EXEC"
    daemon --user $USER $EXEC {% for collector in node_exporter_enabled_collectors %}--collector.{{ collector }} {% endfor %} {% for collector in node_exporter_disabled_collectors %}--no-collector.{{ collector }} {% endfor %} {% for flag, flag_value in node_exporter_config_flags.items() %}--{{ flag }}={{ flag_value }} {% endfor %} --web.listen-address={{ node_exporter_web_listen_address }} >> $LOGFILE &
    [ $? -eq 0 ] && touch $LOCKFILE
    return $RETVAL
}

stop() {
    echo -n $"Stopping $PROG: "
    # stop it here, often "killproc $PROG"
    killproc $EXEC
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && rm -f $LOCKFILE
    return $RETVAL
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $PROG
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
